// Generated by CoffeeScript 1.10.0
var Build, Stream;

Stream = require('js/util/Stream');

Build = require('js/build/Build');

beforeAll(function() {
  var build, buildArgs, stream;
  buildArgs = {
    name: 'Muse',
    plane: 'Information',
    op: ''
  };
  stream = new Stream();
  build = new Build(buildArgs, stream);
  return Util.noop(build);
});

describe("Build/Build.coffee", function() {
  it("constructor:() ->                                           ", function() {
    return expect(true).toBe(true);
  });
  it("core:( name ) ->                                            ", function() {
    return expect(true).toBe(true);
  });
  it("@logCore:( Core ) ->                                        ", function() {
    return expect(true).toBe(true);
  });
  it("toRows:( rows ) ->                                          ", function() {
    return expect(true).toBe(true);
  });
  it("toColumns:( cols ) ->                                       ", function() {
    return expect(true).toBe(true);
  });
  it("toGroups:( groups ) ->                                      ", function() {
    return expect(true).toBe(true);
  });
  it("toCells:( quels ) ->                                        ", function() {
    return expect(true).toBe(true);
  });
  it("notContext:( key ) ->                                       ", function() {
    return expect(true).toBe(true);
  });
  it("createPlanes:( SpecPractices, SpecStudies ) ->              ", function() {
    return expect(true).toBe(true);
  });
  it("createPractices:( keyPlane, SpecPractices, SpecStudies ) -> ", function() {
    return expect(true).toBe(true);
  });
  it("createStudies:( keyPractice, SpecStudies ) ->               ", function() {
    return expect(true).toBe(true);
  });
  it("createTopics:( keyStudy ) ->                                ", function() {
    return expect(true).toBe(true);
  });
  it("createRoutes:() ->                                          ", function() {
    return expect(true).toBe(true);
  });
  it("queryPractiices:( filter ) ->                               ", function() {
    return expect(true).toBe(true);
  });
  it("queryStudies:( filter ) ->                                  ", function() {
    return expect(true).toBe(true);
  });
  it("practices:( ikw ) -> @Planes[ikw].Practices                 ", function() {
    return expect(true).toBe(true);
  });
  it("studies:( ikw ) ->                                          ", function() {
    return expect(true).toBe(true);
  });
  it("practicesSwitch:( ikw ) ->                                  ", function() {
    return expect(true).toBe(true);
  });
  it("conveyTarget:( source ) ->                                  ", function() {
    return expect(true).toBe(true);
  });
  it("conduit:( practice ) ->                                     ", function() {
    return expect(true).toBe(true);
  });
  it("innovateStudies:( practice ) ->                             ", function() {
    return expect(true).toBe(true);
  });
  it("talkUrl:( talk ) ->                                         ", function() {
    return expect(true).toBe(true);
  });
  return it("logPlanes:( Planes ) ->                                     ", function() {
    return expect(true).toBe(true);
  });
});
