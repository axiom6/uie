// Generated by CoffeeScript 1.12.2
(function() {
  var $, Btn, UI,
    hasProp = {}.hasOwnProperty;

  $ = require('jquery');

  UI = require('js/ui/UI');

  Btn = (function() {
    module.exports = Btn;

    function Btn(ui, stream, pane, spec, contents1) {
      this.ui = ui;
      this.stream = stream;
      this.pane = pane;
      this.spec = spec;
      this.contents = contents1;
      this.css = this.pane.css;
    }

    Btn.prototype.ready = function() {
      if (this.pane.page == null) {
        return;
      }
      this.$ = $(this.html(this.contents));
      this.pane.$.append(this.$);
      this.publish(this.contents);
    };

    Btn.prototype.layout = function(geom) {
      if (geom.w < 200) {
        this.$.hide();
      } else {
        this.$.show();
      }
    };

    Btn.prototype.html = function(contents) {
      var content, html, htmlId, key;
      htmlId = this.ui.htmlId(this.pane.name, 'Btn');
      html = "<ul id=\"" + htmlId + "\" class=\"" + (this.css + '-ul-content') + "\">";
      for (key in contents) {
        if (!hasProp.call(contents, key)) continue;
        content = contents[key];
        if (!(this.hasButton(content))) {
          continue;
        }
        content.btnId = this.ui.htmlId(this.pane.name, content.name + 'Btn');
        html += "<li id=\"" + content.btnId + "\" class=\"btn-page\">" + content.name + "</li>";
      }
      html += "</ul>";
      return html;
    };


    /*
    render:( contents ) ->
      htmlId = @ui.htmlId( @pane.name, 'Btn' )
      lis    = []
      for own key, content of contents when @hasButton( content )
        content.btnId = @ui.htmlId( @pane.name, content.name+'Btn')
        lis.push( h( "li##{content.btnId}.btn-page", content.name ) )
      h("ul##{htmlId}.#{@css+'-ul-content'}", lis )
     */

    Btn.prototype.publish = function(contents) {
      var content, key, msg;
      for (key in contents) {
        if (!hasProp.call(contents, key)) continue;
        content = contents[key];
        if (!(this.hasButton(content))) {
          continue;
        }
        content.$btn = $('#' + content.btnId);
        msg = UI.Build.content(content.name, 'Btn', UI.Build.SelectPractice, this.pane.name);
        this.stream.publish('Content', msg, content.$btn, 'click');
      }
    };

    Btn.prototype.hasButton = function(content) {
      return content.has && content.name !== 'Study';
    };

    return Btn;

  })();

}).call(this);
