// Generated by CoffeeScript 1.6.3
(function() {
  var Build, MBox, Vis;

  Vis = require('js/util/Vis');

  Build = require('js/prac/Build');

  MBox = (function() {
    module.exports = MBox;

    function MBox() {
      var THREE;
      THREE = window['THREE'];
      this.mathbox = mathBox({
        plugins: ['core', 'controls', 'cursor', 'stats'],
        controls: {
          klass: THREE.OrbitControls
        }
      });
      if (this.mathbox.fallback) {
        Util.error('mathbox WebGL not supported');
      }
      Util.mathbox = this.mathbox;
      this.three = this.mathbox.three;
      this.three.renderer.setClearColor(new THREE.Color(0x000000), 1.0);
      Util.time = 0;
      this.setupTime();
    }

    MBox.prototype.createBuild = function() {
      var args;
      args = {
        name: 'Muse',
        plane: 'Information',
        op: ''
      };
      return new Build(args);
    };

    MBox.prototype.setupTime = function() {
      this.three.on('update', function() {
        return Util.time = this.three.Time.clock;
      });
      Util.noop();
    };

    /*
    createMenuBar:( ncs ) ->
      liStyle = "display:inline; margin-right:10px; position:relative; left:0; top:0; width:auto; height:auto;"
      $ul = $("""<ul style="position:absolute; left:20px; top:10px; background:white; display:inline; list-style:none; list-style-image:none;">""")
      for nc in ncs
        [n,c] = nc
        $li = $("""<li style="#{liStyle}"><buttons>#{n}</buttons></li>""")
        $li.on( 'click', c )
        $ul.append($li)
      $('body').append($ul)
      return
    */


    /*
    """<button style="position: absolute; bottom: 15px; left: 50%; margin-left: -60px; width: 120px; font-size: 20px;" onclick="#{c}">#{n}</button>"""
    */


    MBox.prototype.pv1v2 = function(p, v1, v2) {
      var i, p1, p2, v3, _i;
      p1 = p * 0.01;
      p2 = 1.0 - p1;
      v3 = [0, 0, 0];
      for (i = _i = 0; _i < 3; i = ++_i) {
        v3[i] = v1[i] * p1 + v2[i] * p2;
      }
      return v3;
    };

    MBox.prototype.toRad = function(i, n) {
      var hue;
      hue = (i * 360 / n) % 360;
      return Vis.toRadian(hue);
    };

    MBox.prototype.toHue = function(i, n) {
      var h;
      h = (i * 360 / n) % 360;
      return Util.toInt(h);
    };

    MBox.prototype.sin9 = function(x, y) {
      return 0.5 + 0.25 * Math.sin(12 * x + Util.time * 0.3) + 0.25 * Math.sin(12 * y + Util.time * 0.3);
    };

    MBox.prototype.sin12 = function(x, y) {
      return 0.5 + 0.50 * Math.sin(12 * x + Util.time * 0.3) + 0.50 * Math.sin(12 * y + Util.time * 0.3);
    };

    MBox.prototype.sinNorm = function(x, y) {
      return Math.sin(12 * x + Util.time * 0.3) + Math.sin(12 * y + Util.time * 0.3);
    };

    MBox.prototype.sin9Pq = function(a, r) {
      return 0.5 + 0.25 * Math.sin(12 * (r + a) + Util.time * 1.2 + π / 12) + 0.25 * Math.cos(12 * a);
    };

    MBox.prototype.sin9P = function(a, r) {
      return 0.5 * Math.sin(12 * (a + r) + Util.time * 1.2 + π / 12) + 0.5 * Math.cos(12 * a);
    };

    MBox.prototype.sin9R = function(a, r) {
      return 0.5 + 0.25 * Math.sin(12 * r * a + Util.time * 1.2) + 0.25 * Math.sin(6 * a);
    };

    MBox.prototype.sin9P = function(a, r) {
      return 0.5 + 0.25 * Math.sin(12 * r + Util.time * 0.3 + π / 12) + 0.25 * Math.sin(12 * a + π / 12);
    };

    MBox.prototype.sin9PJan = function(a, r) {
      return 0.5 * Math.sin(12 * (a + r) + Util.time * 1.2 + π / 12) + 0.50 * Math.cos(12 * a);
    };

    MBox.prototype.sin9QJan = function(a, r) {
      return 0.5 + 0.25 * Math.sin(12 * r + Util.time * 0.3 + π / 12) + 0.25 * Math.sin(12 * a + π / 12);
    };

    MBox.prototype.sin12P = function(a, r) {
      return 0.5 * Math.sin(12 * (r + a) + Util.time * 1.2) + 0.5 * Math.cos(12 * a);
    };

    MBox.prototype.sin12R = function(a, r) {
      return .5 + 0.25 * Math.sin(r + a) + 0.25 * Math.cos(r + a * Util.time * 0.5);
    };

    MBox.prototype.sin12PMar = function(a, r) {
      return .5 + .5 * Math.sin(12 * (r + a) + Util.time) * Math.sin(9 * a + Util.time);
    };

    MBox.prototype.sin12CMar = function(a, r) {
      return .5 + .5 * Math.sin(12 * (r + a) + Util.time) * Math.sin(9 * a + Util.time) * Math.cos(r);
    };

    MBox.prototype.sin09PMar = function(a, r) {
      return .5 + .5 * Math.sin(9 * (r + a) + Util.time) * Math.sin(9 * a + Util.time);
    };

    MBox.prototype.sin01Oct = function(a, r) {
      return .5 + .5 * Math.sin(a + Util.time) * Math.sin(r + Util.time);
    };

    MBox.prototype.sin09Oct = function(a, r) {
      return .5 + .5 * Math.sin(9 * a + Util.time) * Math.sin(9 * r + Util.time);
    };

    MBox.prototype.sin12Oct = function(a, r) {
      return .5 + .5 * Math.sin(12 * a + Util.time) * Math.sin(12 * r + Util.time);
    };

    MBox.prototype.cos01Oct = function(a, r) {
      return .5 + .5 * Math.cos(a + Util.time) * Math.cos(r + Util.time);
    };

    MBox.prototype.sin12AMay = function(a, r) {
      return .5 + .50 * Math.cos(12 * a + Util.time);
    };

    MBox.prototype.sin12RMay = function(a, r) {
      return .5 + .50 * Math.cos(12 * r + Util.time);
    };

    MBox.prototype.sin12MMay = function(a, r) {
      return .5 + .50 * Math.cos(12 * a + Util.time) * 1.00 * Math.cos(12 * r + Util.time);
    };

    MBox.prototype.sin12PMay = function(a, r) {
      return .5 + .25 * Math.cos(12 * a + Util.time) + .25 * Math.cos(12 * r + Util.time);
    };

    MBox.prototype.sin12QMay = function(a, r) {
      return .5 + .25 * Math.cos(12 * a + Util.time) + .25 * Math.cos(12 * r + Util.time);
    };

    MBox.prototype.sin12QJan = function(a, r) {
      return .50 + .50 * Math.sin(12 * (r + a) + Util.time * 1.2);
    };

    MBox.prototype.sin12AJan = function(a, r) {
      return .50 + .50 * Math.sin(12 * a + Util.time * 1.2);
    };

    MBox.prototype.sin06AJan = function(a, r) {
      return .50 + .50 * Math.sin(3 * a + Util.time * 1.2);
    };

    MBox.prototype.sin06B = function(a, r) {
      return .55 + .45 * Math.sin(3 * a + Util.time);
    };

    MBox.prototype.sin06C = function(a, r) {
      return .60 + .40 * Math.sin(3 * a + Util.time);
    };

    MBox.prototype.sin03D = function(a, r) {
      return .60 + .40 * Math.sin(3 * a + Util.time) * Math.sin(r * 0.11 + Util.time);
    };

    MBox.prototype.sin06D = function(a, r) {
      return .60 + .40 * Math.sin(6 * a + Util.time) * Math.sin(r * 0.11 + Util.time);
    };

    MBox.prototype.sin06E = function(a, r) {
      return .60 + .40 * Math.sin(6 * a + Util.time) * Math.sin(r / 12 + Util.time);
    };

    MBox.prototype.sin06F = function(a, r) {
      return .60 + .40 * Math.sin(6 * a + Util.time) * Math.sin(r / 8 + Util.time);
    };

    MBox.prototype.sigmoidal = function(x, k, x0) {
      if (x0 == null) {
        x0 = 0.5;
      }
      return 1 / (1 + Math.exp(-k * (x - x0)));
    };

    MBox.prototype.depth = function() {
      return Math.abs(Math.cos(Util.time * 0.5));
    };

    MBox.prototype.toDep = function(a, r) {
      return Math.abs(Math.cos(6 * (r + a) + Util.time * 0.5));
    };

    return MBox;

  })();

}).call(this);
