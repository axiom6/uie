// Generated by CoffeeScript 1.12.2
(function() {
  var Cluster, Vis, d3;

  d3 = require('d3');

  Vis = require('js/util/Vis');

  Cluster = (function() {
    module.exports = Cluster;

    function Cluster(spec, g, w, h) {
      this.spec = spec;
      this.g = g;
      this.w = w;
      this.h = h;
      this.tree = d3.cluster();
      this.tree.size([this.h * 0.6, this.w * 0.75]);
      this.root = d3.hierarchy(this.spec);
      this.tree(this.root);
      this.doLink();
      this.doNode();
    }

    Cluster.prototype.sort = function(root) {
      root.sort(function(a, b) {
        return (a.height - b.height) || a.id.localeCompare(b.id);
      });
    };

    Cluster.prototype.doLink = function() {
      var link;
      return link = this.g.selectAll(".link").data(this.root.descendants().slice(1)).enter().append("path").attr("class", "link").attr("d", (function(_this) {
        return function(d) {
          return _this.moveTo(d);
        };
      })(this));
    };

    Cluster.prototype.moveTo = function(d) {
      var p;
      p = d.parent;
      return "M" + d.y + "," + d.x + "C" + (p.y + 100) + "," + d.x + " " + (p.y + 100) + "," + p.x + " " + p.y + "," + p.x;
    };

    Cluster.prototype.doNode = function() {
      var node;
      node = this.g.selectAll(".node").data(this.root.descendants()).enter().append("g").attr("class", function(d) {
        var ref;
        return "node" + ((ref = d.children) != null ? ref : {
          " node--internal": " node--leaf"
        });
      }).attr("transform", function(d) {
        return "translate(" + d.y + "," + d.x + ")";
      });
      node.append("circle").attr("r", 5.0);
      return node.append("svg:text").attr("dy", 3).attr("x", function(d) {
        if (d.children != null) {
          return -8;
        } else {
          return 8;
        }
      }).attr("y", 3).text(function(d) {
        return d.name;
      }).attr("stroke", "yellow").style("text-anchor", function(d) {
        if (d.children != null) {
          return "end";
        } else {
          return "start";
        }
      });
    };

    return Cluster;

  })();

}).call(this);
