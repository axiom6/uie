// Generated by CoffeeScript 1.10.0
(function() {
  var F6s;

  F6s = (function() {
    module.exports = F6s;


    /*
    "https://www.f6s.com/system/search/autocomplete-locations?id_format=country_alias%2Fcity_alias&countries=1"
     https://www.f6s.com/account/settings/search_actors_data?type=skills'
                var cs = new Cs({
                  site_url : "/moc.s6f.www//:sptth".reverse(),
                  site_url_ssl : "/moc.s6f.www//:sptth".reverse(),
                  site_url_main: "https://www.f6s.com/",
                  login_page_path: 'main/authorization/login',
                  fbAppId : '196388037101827',
                  fbUserData : 'public_profile, email, user_friends',
                  youtubeKey : 'AIzaSyDVX5KW2tLWng9Qcze1xzz_Z_8ApL8XTs8'
     */

    F6s.F6sCom = "https://api.f6s.com/";

    F6s.F6sSearch = "https://www.f6s.com/system/search/autocomplete-investors";

    F6s.Local = {
      isLocal: true
    };

    F6s.Innov = {
      profile: "innovationpavilionx",
      apikey: "gGar55En9K"
    };

    F6s.Wellness = {
      profile: "healthwellnesscallfordeals",
      apikey: "brl2Txl3PX"
    };

    F6s.Actor = "actor-id";

    F6s.ThumbTh4 = "&thumbnail_size=th4";

    F6s.TableNames = ["mentors", "teams", "applications", "members", "leaders", "investors", "applicants", "applicants", "following", "followers"];

    function F6s(build, stream, setup) {
      this.build = build;
      this.stream = stream;
      this.setup = setup;
      this.Database = Util.Import('data/Database');
      this.Rest = Util.Import('store/Store.Rest');
      this.uri = this.setup.isLocal != null ? this.Database.Databases['f6s'].uriLoc : F6s.F6sCom + this.setup.profile;
      this.rest = new this.Rest(this.stream, this.uri);
      this.rest.remember();
      Util.databases[this.rest.dbName] = this.rest.getMemoryTables();
    }

    F6s.prototype.doSelects = function() {
      return this.selectTeams();
    };

    F6s.prototype.doSelectsAll = function() {
      this.selectProfiles();
      this.selectMentors();
      this.selectTeams();
      this.selectApplications();
      return this.selectConnections('followers');
    };

    F6s.prototype.select = function(table, params, onRows) {
      var tableJson;
      tableJson = this.setup.isLocal != null ? table + '.json' : table;
      this.rest.subscribe(table, 'none', 'select', (function(_this) {
        return function(rows) {
          return onRows(rows);
        };
      })(this));
      return this.rest.select(tableJson, this.Rest.W, ("?api_key=" + this.setup.apikey) + params);
    };

    F6s.prototype.selectProfiles = function(params) {
      if (params == null) {
        params = F6s.ThumbTh4;
      }
      return this.select('profile', params, this.onProfiles);
    };

    F6s.prototype.selectMentors = function(page, count) {
      if (page == null) {
        page = '1';
      }
      if (count == null) {
        count = '500';
      }
      return this.select('mentors', "&page=" + page + "&count=" + count, this.onMentors);
    };

    F6s.prototype.selectTeams = function(programs) {
      if (programs == null) {
        programs = this.setup.profile;
      }
      return this.select('teams', "&programs=" + programs, this.onTeams);
    };

    F6s.prototype.selectApplications = function(order, count) {
      if (order == null) {
        order = 'newest';
      }
      if (count == null) {
        count = '500';
      }
      return this.select('applications', "&sort_by=" + order + "&count=" + count, this.onApplications);
    };

    F6s.prototype.selectConnections = function(connection) {
      if (Util.contains(F6s.TableNames, connection)) {
        return this.select(connection, "", this.onConnections);
      } else {
        return Util.error('Fs6.selectConnections() unknown connection table', connection);
      }
    };

    F6s.prototype.onProfiles = function(profiles) {
      return Util.noop(profiles);
    };

    F6s.prototype.onMentors = function(mentors) {
      return Util.noop(mentors);
    };

    F6s.prototype.onTeams = function(teams) {
      return Util.noop(teams);
    };

    F6s.prototype.onApplications = function(applications) {
      return Util.noop(applications);
    };

    F6s.prototype.onConnections = function(connections) {
      return Util.noop(connections);
    };

    return F6s;

  })();

}).call(this);
