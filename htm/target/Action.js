// Generated by CoffeeScript 1.12.2
(function() {
  var $, Action;

  $ = require('jquery');

  Action = (function() {
    module.exports = Action;

    function Action(stream) {
      this.stream = stream;
      this.first = true;
      this.fullUI = true;
      this.stream.subscribe('Navigate', (function(_this) {
        return function(object) {
          return _this.navigate(object);
        };
      })(this));
      this.stream.subscribe('Settings', (function(_this) {
        return function(object) {
          return _this.settings(object);
        };
      })(this));
      this.stream.subscribe('Submit', (function(_this) {
        return function(object) {
          return _this.submit(object);
        };
      })(this));
      this.stream.subscribe('Test', (function(_this) {
        return function(topic) {
          return _this.onTest(topic);
        };
      })(this));
    }

    Action.prototype.ready = function() {
      $('#' + Util.htmlId('App')).html(this.html());
      this.$togg = $('#' + Util.getHtmlId('Togg', 'App'));
      this.stream.publish('Toggle', 'Toggle', this.$togg, 'click');
      this.stream.subscribe('Toggle', (function(_this) {
        return function(toggle) {
          return _this.onToggle(toggle);
        };
      })(this));
    };

    Action.prototype.onTest = function(topic) {
      var Persist, persist;
      switch (topic) {
        case 'Persist':
          Persist = Util.Import('Muse.Persist');
          persist = new Persist(this.stream);
          Util.noop(persist);
      }
    };

    Action.prototype.htmlId = function(name) {
      return Util.htmlId(name, 'App');
    };

    Action.prototype.getHtmlId = function(name) {
      return Util.getHtmlId(name, 'App');
    };

    Action.prototype.html = function() {
      return "<div   class=\"ikw-logo\" id=\"" + (this.htmlId('Logo')) + "\"></div>\n<div   class=\"ikw-corp\" id=\"" + (this.htmlId('Corp')) + "\">\n  <div id=\"" + (this.htmlId('Navb')) + "\"></div>\n</div>\n<div   class=\"ikw-find\" id=\"" + (this.htmlId('Find')) + "\"></div>\n<div   class=\"ikw-tocs tocs\" id=\"" + (this.htmlId('Tocs')) + "\"></div>\n<div   class=\"ikw-view\" id=\"" + (this.htmlId('View')) + "\">\n  <i id=\"" + (this.htmlId('Togg')) + "\" class=\"fa fa-compress ikw-togg\"></i>\n</div>\n<div class=\"ikw-side\" id=\"" + (this.htmlId('Side')) + "\"></div>\n<div class=\"ikw-pref\" id=\"" + (this.htmlId('Pref')) + "\"><a id=\"" + (this.htmlId('ImageLink')) + "\"></a></div>\n<div class=\"ikw-foot\" id=\"" + (this.htmlId('Foot')) + "\"></div>\n<div class=\"ikw-trak\" id=\"" + (this.htmlId('Trak')) + "\"></div>";
    };

    Action.prototype.createRouter = function(Routes) {
      var router;
      router = new Router(Routes);
      router.init();
      return router;
    };

    Action.prototype.navigate = function(topic) {
      Util.log('App.Action.navigate()', topic);
      window.location.assign(topic);
    };

    Action.prototype.settings = function(topic) {
      Util.log('App.Action.settings()', topic);
    };

    Action.prototype.submit = function(object) {
      switch (object.topic) {
        case 'Search':
          return this.search(object.value);
        case 'SignOn':
          return this.signon(object.value);
        default:
          return Util.error('App.Action.submit() unknown input value', object);
      }
    };

    Action.prototype.search = function(value) {
      return Util.log('App.Action.search()', value);
    };

    Action.prototype.signon = function(value) {
      return Util.log('App.Action.signon()', value);
    };

    Action.prototype.onToggle = function(toggle) {
      var shrink;
      if (this.first) {
        this.$logo = $('#' + this.getHtmlId('Logo'));
        this.$tocs = $('#' + this.getHtmlId('Tocs'));
        this.$corp = $('#' + this.getHtmlId('Corp'));
        this.$view = $('#' + this.getHtmlId('View'));
        this.west = this.$tocs.width();
        this.north = this.$corp.height();
        this.first = false;
      }
      if (this.fullUI) {
        shrink = 0;
        this.$tocs.css('width', shrink);
        this.$corp.css('height', shrink);
        this.$view.css({
          left: shrink,
          top: shrink
        });
        this.$tocs.hide();
        this.$corp.hide();
        this.$view.hide().show(600);
        this.$togg.attr('class', 'fa fa-expand ikw-togg');
      } else {
        this.$tocs.css('width', this.west);
        this.$corp.css('height', this.north);
        this.$view.css({
          left: this.west,
          top: this.north
        });
        this.$tocs.show();
        this.$corp.show();
        this.$view.hide().show(600);
        this.$togg.attr('class', 'fa fa-compress ikw-togg');
      }
      this.fullUI = !this.fullUI;
      Util.noop(toggle);
    };

    return Action;

  })();

}).call(this);
