// Generated by CoffeeScript 1.10.0
var Build, Stream;

Stream = require('js/util/Stream');

Build = require('js/prac/Build');

beforeAll(function() {
  var build, buildArgs, stream;
  buildArgs = {
    name: 'Muse',
    plane: 'Information',
    op: ''
  };
  stream = new Stream();
  build = new Build(buildArgs, stream);
  return Util.noop(build);
});

describe("exit/Muse.coffee", function() {
  it("root        ", function() {
    return expect(true).toBe(true);
  });
  it("paths       ", function() {
    return expect(true).toBe(true);
  });
  it("libs        ", function() {
    return expect(true).toBe(true);
  });
  it("init        ", function() {
    return expect(true).toBe(true);
  });
  return it("Util.loadInitLibs( root, paths, libs, init )", function() {
    return expect(true).toBe(true);
  });
});

describe("exit/Muse.coffee", function() {
  return it("constructor:() ->         ", function() {
    return expect(true).toBe(true);
  });
});

describe("exit/Action.coffee", function() {
  it("constructor:( @app ) ->                        ", function() {
    return expect(true).toBe(true);
  });
  it("plane:( topic ) ->                             ", function() {
    return expect(true).toBe(true);
  });
  it("navigate:( topic ) ->                          ", function() {
    return expect(true).toBe(true);
  });
  it("about:( topic ) ->                             ", function() {
    return expect(true).toBe(true);
  });
  it("settings:( topic ) ->                          ", function() {
    return expect(true).toBe(true);
  });
  it("submit:(  inVal ) ->                           ", function() {
    return expect(true).toBe(true);
  });
  it("search:( value ) ->                            ", function() {
    return expect(true).toBe(true);
  });
  return it("signon:( value ) ->                            ", function() {
    return expect(true).toBe(true);
  });
});
